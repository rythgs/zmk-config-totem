//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt { tapping-term-ms = <175>; };

&lt {
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <200>;
};

&mmv {
    acceleration-exponent = <1>;      // 1
    time-to-max-speed-ms = <500>;     // 300
    delay-ms = <0>;                   // 0
};

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <500>;     // 300
    delay-ms = <0>;                   // 0
};

/ {
    combos {
        compatible = "zmk,combos";

        eisu {
            bindings = <&kp LANG2>;
            key-positions = <22 23>;
        };

        kana {
            bindings = <&kp LANG1>;
            key-positions = <28 29>;
        };

        combo_studio_unlock {
            bindings = <&studio_unlock>;
            key-positions = <21 22 23 24>;
        };

        mouse {
            bindings = <&tog 5>;
            key-positions = <2 3>;
        };
    };

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row_mod_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31>;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row_mod_right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 22 23 24 25 21 20>;
        };

        // カスタムホールドタップ動作の定義

        bspc_del_layer: backspace_delete_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "BSPC_DEL_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <175>;  // ホールド判定までの時間（ミリ秒）
            quick-tap-ms = <200>;     // 連続タップ時の判定時間
            flavor = "tap-preferred"; // タップを優先
            bindings = <&mo>, <&bspc_del_mod>;
        };

        // Shift修飾キー付きタップの動作

        bspc_del_mod: backspace_delete_mod {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL_MOD";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        win_center_or_maximize: win_center_or_maximize {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CENTER_OR_MAXIMIZE";
            bindings = <&kp RA(RC(C))>, <&kp RA(RC(ENTER))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-mod-morph";
            label = "SCREENSHOT";
            bindings = <&kp LG(LS(NUMBER_4))>, <&kp LG(LS(NUMBER_5))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
             &kp Q  &kp W         &kp F            &kp P              &kp B                 &kp J                &kp L                &kp U             &kp Y         &none
             &kp A  &hml LCTRL R  &hml LEFT_ALT S  &hml LEFT_SHIFT T  &kp G                 &kp K                &hmr RIGHT_SHIFT N   &hmr RIGHT_ALT E  &hmr RCTRL I  &kp O
&screenshot  &kp Z  &kp X         &kp C            &kp D              &kp V                 &kp M                &kp H                &kp COMMA         &kp DOT       &kp MINUS  &none
                                  &mo 3            &lt 1 TAB          &mt LEFT_GUI SPACE    &mt RIGHT_GUI ENTER  &bspc_del_layer 2 0  &mo 4
            >;
        };

        Symbol {
            bindings = <
       &kp ASTERISK   &kp PLUS                   &kp MINUS           &kp SLASH               &kp PERCENT       &kp LEFT_BRACKET   &kp LESS_THAN                      &kp EQUAL             &kp GREATER_THAN                      &kp RIGHT_BRACKET
       &kp TILDE      &hml LEFT_CONTROL AT_SIGN  &hml LEFT_ALT HASH  &hml LEFT_SHIFT DOLLAR  &kp UNDERSCORE    &kp LEFT_BRACE     &hmr RIGHT_SHIFT LEFT_PARENTHESIS  &hmr RIGHT_ALT COLON  &hmr RIGHT_CONTROL RIGHT_PARENTHESIS  &kp RIGHT_BRACE
&none  &kp BACKSLASH  &kp CARET                  &kp PIPE            &kp SEMICOLON           &kp AMPERSAND     &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE                   &kp EXCLAMATION       &kp QUESTION                          &kp GRAVE          &none
                                                 &trans              &trans                  &trans            &kp RG(SLASH)      &trans                             &trans
            >;
        };

        Nav {
            bindings = <
       &none   &none                       &none                   &none                     &none     &none   &kp ESCAPE      &kp UP_ARROW    &caps_word       &none
       &kp N1  &hml LEFT_CONTROL NUMBER_2  &hml LEFT_ALT NUMBER_3  &hml LEFT_SHIFT NUMBER_4  &kp N5    &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none
&none  &kp N6  &kp N7                      &kp N8                  &kp N9                    &kp N0    &none   &none           &none           &none            &none  &none
                                           &trans                  &kp PERIOD                &trans    &trans  &trans          &trans
            >;
        };

        Function {
            bindings = <
       &none   &kp LEFT_GUI   &kp LS(TAB)       &kp TAB             &none     &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none  &none
       &kp F1  &hml LCTRL F2  &hml LEFT_ALT F3  &hml LEFT_SHIFT F4  &kp F5    &none       &none         &none         &none  &none
&none  &none   &none          &none             &none               &none     &none       &none         &none         &none  &none  &none
                              &trans            &trans              &trans    &trans      &trans        &trans
            >;
        };

        System {
            bindings = <
       &none         &none         &none         &bt BT_CLR    &bt BT_CLR_ALL    &none  &sys_reset  &none  &none  &none
       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &none  &none       &none  &none  &none
&none  &none         &none         &none         &none         &none             &none  &none       &none  &none  &none  &none
                                   &none         &none         &none             &none  &none       &none
            >;
        };

        Mouse {
            bindings = <
       &none  &none  &none  &none  &none    &none           &none           &mmv MOVE_UP    &none            &none
       &none  &none  &none  &none  &none    &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT
&none  &none  &none  &none  &none  &none    &none           &mkp LCLK       &mkp MCLK       &mkp RCLK        &none            &none
                     &none  &none  &none    &msc SCRL_DOWN  &msc SCRL_UP    &none
            >;
        };
    };
};
